services:
  climacan-dev:
    build:
      context: ..
      dockerfile: docker/base.Dockerfile
    container_name: climacan-dev
    env_file:
      - ../.env
    command: sleep infinity
    # command: /bin/bash /workspaces/ClimaCan/run.sh
    # Crear volumen del proyecto para actualizar los ficheros. Hay elementos
    # que se deben de enviar a otros contenedores y de esta forma siempre se
    # encuentran actualizados
    volumes:
      - ..:/workspaces/ClimaCan
    restart: unless-stopped
    networks:
      - climacan_network
    dns:
      - 8.8.8.8
      - 4.4.4.4


  climacan-influxdb:
    image: influxdb:1.8
    container_name: climacan-influxdb
    ports:
      - "${INFLUXDB_PORT:-8096}:${INFLUXDB_PORT:-8096}"
    volumes:
      - ./volumes/influxdb/data:/var/lib/influxdb
      - ./volumes/influxdb/db:/var/lib/influxdb/backup
    environment:
      - TZ=Atlantic/Canary
      - INFLUXDB_HTTP_BIND_ADDRESS=:${INFLUXDB_PORT:-8096}
    depends_on:
      - climacan-dev
    restart: unless-stopped
    networks:
      - climacan_network

  climacan-grafana:
    image: grafana/grafana
    container_name: climacan-grafana
    ports:
      - "${GRAFANA_PORT:-3010}:${GRAFANA_PORT:-3010}"
    volumes:
      - ./volumes/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./volumes/grafana/provisioning:/etc/grafana/provisioning
      - ./volumes/grafana/dashboards:/etc/grafana/dashboards
      - ./volumes/grafana/my_img:/usr/share/grafana/public/my_img
    environment:
      - TZ=Atlantic/Canary
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_SERVER_HTTP_PORT=${GRAFANA_PORT:-3010}
      - GRAFANA_PORT=${GRAFANA_PORT:-3010}
      - INFLUXDB_PORT=${INFLUXDB_PORT:-8096}
    depends_on:
      - climacan-dev
    restart: unless-stopped
    networks:
      - climacan_network

# Red personalizada
networks:
  climacan_network:
    driver: bridge
